"use strict";
var Nodemailer = require("nodemailer");
module.exports = (function () {
    function DenialMail(from, password, to, fromname) {
        this.from = from;
        this.to = from;
        if (fromname)
            this.name = fromname;
        this.transporter = Nodemailer.createTransport("smtps://" + from.split("@")[0] + "%40gmail.com:" + password + "@smtp.gmail.com");
    }
    DenialMail.prototype.send = function (text, subject) {
        return new Promise(function (resolve, reject) {
            var html = text;
            var subj = subject;
            var mailOptions = {
                from: '"' + this.name + '" <' + this.from + '>',
                to: this.to,
                subject: subj,
                text: html,
                html: html
            };
            this.transporter.sendMail(mailOptions, function (error, info) {
                if (error) {
                    reject(error);
                }
                else {
                    resolve(info);
                }
            });
        });
    };
    return DenialMail;
}());

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFHQSxJQUFPLFVBQVUsV0FBVyxZQUFZLENBQUMsQ0FBQztBQWExQyxpQkFBUztJQU9MLG9CQUFZLElBQVksRUFBRSxRQUFnQixFQUFFLEVBQVUsRUFBRSxRQUFpQjtRQUVyRSxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQztRQUVmLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQztZQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDO1FBQ25DLElBQUksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDLGVBQWUsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxlQUFlLEdBQUcsUUFBUSxHQUFHLGlCQUFpQixDQUFDLENBQUM7SUFDcEksQ0FBQztJQUVELHlCQUFJLEdBQUosVUFBSyxJQUFZLEVBQUMsT0FBZTtRQUM3QixNQUFNLENBQUMsSUFBSSxPQUFPLENBQUMsVUFBUyxPQUFPLEVBQUUsTUFBTTtZQUV2QyxJQUFJLElBQUksR0FBRyxJQUFJLENBQUE7WUFFM0IsSUFBSSxJQUFJLEdBQUMsT0FBTyxDQUFDO1lBSUwsSUFBSSxXQUFXLEdBQVU7Z0JBQ3JCLElBQUksRUFBRSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHO2dCQUMvQyxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUU7Z0JBQ1gsT0FBTyxFQUFFLElBQUk7Z0JBQ2IsSUFBSSxFQUFFLElBQUk7Z0JBQ1YsSUFBSSxFQUFFLElBQUk7YUFDYixDQUFDO1lBSUYsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLFVBQVMsS0FBSyxFQUFFLElBQUk7Z0JBQ3ZELEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7b0JBQ1IsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNsQixDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNKLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDbEIsQ0FBQztZQUdMLENBQUMsQ0FBQyxDQUFDO1FBRVAsQ0FBQyxDQUFDLENBQUE7SUFDTixDQUFDO0lBQ0wsaUJBQUM7QUFBRCxDQS9DUyxBQStDUixHQUFBLENBQUEiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCAqIGFzIGJsdWViaXJkIGZyb20gXCJibHVlYmlyZFwiO1xuXG5pbXBvcnQgTm9kZW1haWxlciA9IHJlcXVpcmUoXCJub2RlbWFpbGVyXCIpO1xuXG5pbnRlcmZhY2UgSW1haWwge1xuXG4gICAgZnJvbTogc3RyaW5nO1xuICAgIHRvOiBzdHJpbmc7IC8vIGxpc3Qgb2YgcmVjZWl2ZXJzIFxuICAgIHN1YmplY3Q6IHN0cmluZzsgLy8gU3ViamVjdCBsaW5lIFxuICAgIHRleHQ6IHN0cmluZztcbiAgICBodG1sOiBzdHJpbmc7XG5cbn1cblxuXG5leHBvcnQgPSBjbGFzcyBEZW5pYWxNYWlsIHtcblxuICAgIGZyb206IHN0cmluZztcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgdG86IHN0cmluZztcbiAgICB0cmFuc3BvcnRlcjogTm9kZW1haWxlci5UcmFuc3BvcnRlcjtcblxuICAgIGNvbnN0cnVjdG9yKGZyb206IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZywgdG86IHN0cmluZywgZnJvbW5hbWU/OiBzdHJpbmcpIHtcblxuICAgICAgICB0aGlzLmZyb20gPSBmcm9tO1xuICAgICAgICB0aGlzLnRvID0gZnJvbTtcblxuICAgICAgICBpZiAoZnJvbW5hbWUpIHRoaXMubmFtZSA9IGZyb21uYW1lO1xuICAgICAgICB0aGlzLnRyYW5zcG9ydGVyID0gTm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoXCJzbXRwczovL1wiICsgZnJvbS5zcGxpdChcIkBcIilbMF0gKyBcIiU0MGdtYWlsLmNvbTpcIiArIHBhc3N3b3JkICsgXCJAc210cC5nbWFpbC5jb21cIik7XG4gICAgfVxuXG4gICAgc2VuZCh0ZXh0OiBzdHJpbmcsc3ViamVjdD86c3RyaW5nKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcblxuICAgICAgICAgICAgbGV0IGh0bWwgPSB0ZXh0XG5cbmxldCBzdWJqPXN1YmplY3Q7XG5cblxuXG4gICAgICAgICAgICBsZXQgbWFpbE9wdGlvbnM6IEltYWlsID0ge1xuICAgICAgICAgICAgICAgIGZyb206ICdcIicgKyB0aGlzLm5hbWUgKyAnXCIgPCcgKyB0aGlzLmZyb20gKyAnPicsIC8vIHNlbmRlciBhZGRyZXNzIFxuICAgICAgICAgICAgICAgIHRvOiB0aGlzLnRvLCAvLyBsaXN0IG9mIHJlY2VpdmVycyBcbiAgICAgICAgICAgICAgICBzdWJqZWN0OiBzdWJqLCAvLyBTdWJqZWN0IGxpbmUgXG4gICAgICAgICAgICAgICAgdGV4dDogaHRtbCwgLy8gcGxhaW50ZXh0IGJvZHkgXG4gICAgICAgICAgICAgICAgaHRtbDogaHRtbCAvLyBodG1sIGJvZHkgXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgIFxuICAgICAgICAgICAgLy8gc2VuZCBtYWlsIHdpdGggZGVmaW5lZCB0cmFuc3BvcnQgb2JqZWN0IFxuICAgICAgICAgICAgdGhpcy50cmFuc3BvcnRlci5zZW5kTWFpbChtYWlsT3B0aW9ucywgZnVuY3Rpb24oZXJyb3IsIGluZm8pIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGluZm8pO1xuICAgICAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB9KVxuICAgIH1cbn0iXX0=
